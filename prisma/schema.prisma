// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  username  String   @unique
  password  String
  isAdmin   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // relationships
  chats Chat[]

  @@map("users")
}

model Chat {
  id        String   @id @default(cuid())
  title     String?
  isPublic  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // relationships
  userId   String?
  user     User?     @relation(fields: [userId], references: [id], onDelete: Cascade)
  messages Message[]

  @@map("chats")
}

model Message {
  id        String   @id @default(cuid())
  role      String // 'user' or 'assistant'
  content   String
  createdAt DateTime @default(now())

  // relationships
  chatId String
  chat   Chat   @relation(fields: [chatId], references: [id], onDelete: Cascade)

  @@map("messages")
}

model ExecutedAction {
  id         String   @id @default(cuid())
  actionId   String // unique identifier for the action
  messageId  String // which message this action belongs to
  chatId     String // which chat this action belongs to
  actionType String // 'shell' or 'file'
  content    String // the actual command or file content
  status     String // 'completed', 'failed', 'skipped'
  output     String? // command output if applicable
  executedAt DateTime @default(now())

  @@unique([actionId, messageId, chatId])
  @@map("executed_actions")
}
